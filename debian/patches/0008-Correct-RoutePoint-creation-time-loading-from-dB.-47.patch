From ba4b03911659642fc3dadd3080b9fd24e6049bd9 Mon Sep 17 00:00:00 2001
From: Dave <bdbcat@yahoo.com>
Date: Fri, 15 Aug 2025 10:25:15 -0400
Subject: [PATCH] Correct RoutePoint creation time loading from dB. #4709

Applied-upstream: https://github.com/OpenCPN/OpenCPN/commit/ba4b03911

---
 model/src/navobj_db.cpp | 35 +++++++++++++++++++++++++++++------
 1 file changed, 29 insertions(+), 6 deletions(-)

diff --git a/model/src/navobj_db.cpp b/model/src/navobj_db.cpp
index 58fbd0aef..bd63266ff 100644
--- a/model/src/navobj_db.cpp
+++ b/model/src/navobj_db.cpp
@@ -26,6 +26,7 @@
 #include <memory>
 #include <vector>
 #include <string>
+#include <iomanip>
 #include <wx/dir.h>
 
 #include "model/base_platform.h"
@@ -1452,6 +1453,7 @@ bool NavObj_dB::UpdateDBRoutePointAttributes(RoutePoint* point) {
     if (point->GetManualETD().IsValid()) etd = point->GetManualETD().GetTicks();
     sqlite3_bind_int(stmt, 8, etd);
     sqlite3_bind_text(stmt, 9, "type", -1, SQLITE_TRANSIENT);
+    std::string timit = point->m_timestring.ToStdString().c_str();
     sqlite3_bind_text(stmt, 10, point->m_timestring.ToStdString().c_str(), -1,
                       SQLITE_TRANSIENT);
     sqlite3_bind_double(stmt, 11, point->m_WaypointArrivalRadius);
@@ -1674,7 +1676,8 @@ bool NavObj_dB::LoadAllRoutes() {
         "p.visibility, "
         "p.viz_name, "
         "p.shared, "
-        "p.isolated "
+        "p.isolated, "
+        "p.created_at "
         "FROM routepoints_link tp "
         "JOIN routepoints p ON p.guid = tp.point_guid "
         "WHERE tp.route_guid = ? "
@@ -1749,6 +1752,8 @@ bool NavObj_dB::LoadAllRoutes() {
       int viz_name = sqlite3_column_int(stmtp, col++);
       int shared = sqlite3_column_int(stmtp, col++);
       int isolated = sqlite3_column_int(stmtp, col++);
+      std::string point_created_at =
+          reinterpret_cast<const char*>(sqlite3_column_text(stmtp, col++));
 
       RoutePoint* point;
       // RoutePoint exists already, in another route?
@@ -1787,6 +1792,16 @@ bool NavObj_dB::LoadAllRoutes() {
         point->SetShared(shared == 1);
         point->m_bIsolatedMark = (isolated == 1);
 
+        if (point_created_at.size()) {
+          // Convert from sqLite default date/time format to wxDateTime
+          // sqLite format uses UTC, so conversion to epoch_time is clear.
+          std::tm tm = {};
+          std::istringstream ss(point_created_at);
+          ss >> std::get_time(&tm, "%Y-%m-%d %H:%M:%S");
+          time_t epoch_time = mktime(&tm);
+          point->m_CreateTimeX = epoch_time;
+        }
+
         //    Add the point HTML links
         const char* sqlh = R"(
         SELECT guid, html_link, html_description, html_type
@@ -1916,7 +1931,8 @@ bool NavObj_dB::LoadAllPoints() {
       "p.visibility, "
       "p.viz_name, "
       "p.shared, "
-      "p.isolated "
+      "p.isolated, "
+      "p.created_at "
       "FROM routepoints p ";
 
   RoutePoint* point = nullptr;
@@ -1964,6 +1980,8 @@ bool NavObj_dB::LoadAllPoints() {
     int viz_name = sqlite3_column_int(stmtp, col++);
     int shared = sqlite3_column_int(stmtp, col++);
     int isolated = sqlite3_column_int(stmtp, col++);
+    std::string point_created_at =
+        reinterpret_cast<const char*>(sqlite3_column_text(stmtp, col++));
 
     if (isolated) {
       point =
@@ -1990,11 +2008,16 @@ bool NavObj_dB::LoadAllPoints() {
       point->SetShared(shared == 1);
       point->m_bIsolatedMark = (isolated == 1);
 
-      if (point_time_string.size()) {
-        wxString sdt(point_time_string.c_str());
-        point->m_timestring = sdt;
-        ParseGPXDateTime(point->m_CreateTimeX, sdt);
+      if (point_created_at.size()) {
+        // Convert from sqLite default date/time format to wxDateTime
+        // sqLite format uses UTC, so conversion to epoch_time is clear.
+        std::tm tm = {};
+        std::istringstream ss(point_created_at);
+        ss >> std::get_time(&tm, "%Y-%m-%d %H:%M:%S");
+        time_t epoch_time = mktime(&tm);
+        point->m_CreateTimeX = epoch_time;
       }
+
       // Add it here
       pWayPointMan->AddRoutePoint(point);
       pSelect->AddSelectableRoutePoint(point->m_lat, point->m_lon, point);
-- 
2.50.0

